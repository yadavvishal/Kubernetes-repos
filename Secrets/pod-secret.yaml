apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  containers:
  - name: my-container
    image: nginx
    env: 
      - name: SECRET_USERNAME
        valueFrom:
          secretKeyRef:
            name: my-secret
            key: username

      - name: SECRET_PASSWORD
        valueFrom: 
          secretKeyRef:
            name: my-secret
            key: password
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    ports:
      - containerPort: 8080


# This setup is useful for securely injecting credentials into an application without hardcoding them in the YAML file.


# env: â†’ Defines environment variables for the container.

# - name: SECRET_USERNAME â†’ Creates an environment variable named SECRET_USERNAME.

# valueFrom: â†’ Specifies that the value is not hardcoded but comes from another resource.

# secretKeyRef: â†’ Tells Kubernetes to fetch this value from a Secret.

# name: my-secret â†’ The Secret's name is "my-secret".

# key: username â†’ Fetches the value of the "username" key from the Secret.

# ðŸ”¹ Purpose: This allows the container to access sensitive data (like a username) from a Kubernetes Secret.




# This block is similar to the previous one but:

# Defines another environment variable named SECRET_PASSWORD.
# Fetches the "password" key from the "my-secret" Secret.
# ðŸ”¹ Purpose: The container now has access to both a username and a password as environment variables.